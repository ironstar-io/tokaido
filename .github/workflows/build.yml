---
name: 'build images'

on:
  push:
    branches:
    - 'release-*'
    tags:
    - 'v*.*.*'

jobs:
  build-amd64:
    runs-on: [self-hosted, x64, linux]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Get build cache base
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-base-cache
        key: buildx-base-${{ hashFiles('images/amd64/base/Dockerfile') }}
        restore-keys: |
          buildx-base-
    - name: Get build cache php74
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-php74-cache
        key: buildx-php74-${{ hashFiles('images/amd64/php74/Dockerfile') }}
        restore-keys: |
          buildx-php74-
    - name: Get build cache php80
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-php80-cache
        key: buildx-php80-${{ hashFiles('images/amd64/php80/Dockerfile') }}
        restore-keys: |
          buildx-php80-
    - name: Get build cache php81
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-php81-cache
        key: buildx-php81-${{ hashFiles('images/amd64/php81/Dockerfile') }}
        restore-keys: |
          buildx-php81-
    - name: Get build cache nginx
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-nginx-cache
        key: buildx-nginx-${{ hashFiles('images/amd64/nginx/Dockerfile') }}
        restore-keys: |
          buildx-nginx-
    - name: Get build cache ssh74
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-ssh74-cache
        key: buildx-ssh74-${{ hashFiles('images/amd64/ssh74/Dockerfile') }}
        restore-keys: |
          buildx-ssh74-
    - name: Get build cache ssh80
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-ssh80-cache
        key: buildx-ssh80-${{ hashFiles('images/amd64/ssh80/Dockerfile') }}
        restore-keys: |
          buildx-ssh80-
    - name: Get build cache ssh81
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-ssh81-cache
        key: buildx-ssh81-${{ hashFiles('images/amd64/ssh81/Dockerfile') }}
        restore-keys: |
          buildx-ssh81-
    - name: Prepare
      id: prep
      run: |
        VERSION=experimental
        echo "GITHUB_REF=${GITHUB_REF}"
        echo "GITHUB_REF_TYPE=${GITHUB_REF_TYPE}"

        # If this belongs to a release branch, create an experimental release for that minor version
        if [[ $GITHUB_REF_TYPE == "branch" && $GITHUB_REF == "refs/heads/release-*" ]]; then
          VERSION="${GITHUB_REF#*-}-experimental"
        fi

        # If this is git tag, use the tag name as a docker tag
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        fi

        # Set output parameters.
        echo ::set-output name=version::${VERSION}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Base
      uses: docker/build-push-action@v3
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: images/amd64/base/
        file: images/amd64/base/Dockerfile
        platforms: linux/amd64
        push: true
        tags: tokaido/base:${{ steps.prep.outputs.version }}-amd64
        cache-from: type=local,src=/tmp/.buildx-base-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-base-cache-new

    - name: Build PHP 7.4
      uses: docker/build-push-action@v3
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: images/amd64/php74/
        file: images/amd64/php74/Dockerfile
        platforms: linux/amd64
        push: true
        tags: tokaido/php74:${{ steps.prep.outputs.version }}-amd64
        cache-from: type=local,src=/tmp/.buildx-php74-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-php74-cache-new
        build-args: |
          TOK_VERSION=${{ steps.prep.outputs.version }}
    
    - name: Build PHP 8.0
      uses: docker/build-push-action@v3
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: images/amd64/php80/
        file: images/amd64/php80/Dockerfile
        platforms: linux/amd64
        push: true
        tags: tokaido/php80:${{ steps.prep.outputs.version }}-amd64
        cache-from: type=local,src=/tmp/.buildx-php80-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-php80-cache-new
        build-args: |
          TOK_VERSION=${{ steps.prep.outputs.version }}

    - name: Build PHP 8.1
      uses: docker/build-push-action@v3
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: images/amd64/php81/
        file: images/amd64/php81/Dockerfile
        platforms: linux/amd64
        push: true
        tags: tokaido/php81:${{ steps.prep.outputs.version }}-amd64
        cache-from: type=local,src=/tmp/.buildx-php81-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-php81-cache-new
        build-args: |
          TOK_VERSION=${{ steps.prep.outputs.version }}

    - name: Build Nginx
      uses: docker/build-push-action@v3
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: images/amd64/nginx/
        file: images/amd64/nginx/Dockerfile
        platforms: linux/amd64
        push: true
        tags: tokaido/nginx:${{ steps.prep.outputs.version }}-amd64
        cache-from: type=local,src=/tmp/.buildx-nginx-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-nginx-cache-new
        build-args: |
          TOK_VERSION=${{ steps.prep.outputs.version }}

    - name: Build SSH 7.4
      uses: docker/build-push-action@v3
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: images/amd64/ssh/
        file: images/amd64/ssh/Dockerfile
        platforms: linux/amd64
        push: true
        tags: tokaido/ssh74:${{ steps.prep.outputs.version }}-amd64
        cache-from: type=local,src=/tmp/.buildx-ssh74-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-ssh74-cache-new
        build-args: |
          TOK_VERSION=${{ steps.prep.outputs.version }}
          PHP_VERSION=74

    - name: Build SSH 8.0
      uses: docker/build-push-action@v3
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: images/amd64/ssh/
        file: images/amd64/ssh/Dockerfile
        platforms: linux/amd64
        push: true
        tags: tokaido/ssh80:${{ steps.prep.outputs.version }}-amd64
        cache-from: type=local,src=/tmp/.buildx-ssh80-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-ssh80-cache-new
        build-args: |
          TOK_VERSION=${{ steps.prep.outputs.version }}
          PHP_VERSION=80


    - name: Build SSH 8.1
      uses: docker/build-push-action@v3
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: images/amd64/ssh/
        file: images/amd64/ssh/Dockerfile
        platforms: linux/amd64
        push: true
        tags: tokaido/ssh81:${{ steps.prep.outputs.version }}-amd64
        cache-from: type=local,src=/tmp/.buildx-ssh81-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-ssh81-cache-new
        build-args: |
          TOK_VERSION=${{ steps.prep.outputs.version }}
          PHP_VERSION=81

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-base-cache
        rm -rf /tmp/.buildx-php74-cache
        mv /tmp/.buildx-base-cache-new /tmp/.buildx-base-cache
        mv /tmp/.buildx-php74-cache-new /tmp/.buildx-php74-cache
        mv /tmp/.buildx-php80-cache-new /tmp/.buildx-php80-cache
        mv /tmp/.buildx-php81-cache-new /tmp/.buildx-php81-cache
        mv /tmp/.buildx-nginx-cache-new /tmp/.buildx-nginx-cache
        mv /tmp/.buildx-ssh74-cache-new /tmp/.buildx-ssh74-cache
        mv /tmp/.buildx-ssh80-cache-new /tmp/.buildx-ssh80-cache
        mv /tmp/.buildx-ssh81-cache-new /tmp/.buildx-ssh81-cache


        #  build-arm64:
        #    runs-on: [self-hosted, arm64, linux]
        #    steps:
        #    - name: Checkout
        #      uses: actions/checkout@v2
        #    - name: Prepare
        #      id: prep
        #      run: |
        #        VERSION=experimental
        #        echo "GITHUB_REF=${GITHUB_REF}"
        #        echo "GITHUB_REF_TYPE=${GITHUB_REF_TYPE}"
        #
        #        # If this belongs to a release branch, create an experimental release for that minor version
        #        if [[ $GITHUB_REF_TYPE == "branch" && $GITHUB_REF == "refs/heads/release-*" ]]; then
        #          VERSION="${GITHUB_REF#*-}-experimental"
        #        fi
        #
        #        # If this is git tag, use the tag name as a docker tag
        #        if [[ $GITHUB_REF == refs/tags/* ]]; then
        #          VERSION=${GITHUB_REF#refs/tags/v}
        #        fi
        #
        #        # Set output parameters.
        #        echo ::set-output name=version::${VERSION}
        #    - name: Set up Docker Buildx
        #      id: buildx
        #      uses: docker/setup-buildx-action@v1
        #    - name: Login to DockerHub
        #      if: github.event_name != 'pull_request'
        #      uses: docker/login-action@v1
        #      with:
        #        username: ${{ secrets.DOCKER_USERNAME }}
        #        password: ${{ secrets.DOCKER_PASSWORD }}
        #    - name: Build Base
        #      uses: docker/build-push-action@v3
        #      with:
        #        builder: ${{ steps.buildx.outputs.name }}
        #        context: images/arm64/base/
        #        file: images/arm64/base/Dockerfile
        #        platforms: linux/arm64
        #        push: true
        #        tags: tokaido/base:${{ steps.prep.outputs.version }}-arm64
        #        cache-from: type=local,src=/tmp/.buildx-cache
        #        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
        #
        #    - name: Build PHP 7.4
        #      uses: docker/build-push-action@v3
        #      with:
        #        builder: ${{ steps.buildx.outputs.name }}
        #        context: images/arm64/php74/
        #        file: images/arm64/php74/Dockerfile
        #        platforms: linux/arm64
        #        push: true
        #        tags: tokaido/php74:${{ steps.prep.outputs.version }}-arm64
        #        cache-from: type=local,src=/tmp/.buildx-cache
        #        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
        #        build-args: |
        #          TOK_VERSION=${{ steps.prep.outputs.version }}
        #
        #    - name: Build PHP 8.0
        #      uses: docker/build-push-action@v3
        #      with:
        #        builder: ${{ steps.buildx.outputs.name }}
        #        context: images/arm64/php80/
        #        file: images/arm64/php80/Dockerfile
        #        platforms: linux/arm64
        #        push: true
        #        tags: tokaido/php80:${{ steps.prep.outputs.version }}-arm64
        #        cache-from: type=local,src=/tmp/.buildx-cache
        #        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
        #        build-args: |
        #          TOK_VERSION=${{ steps.prep.outputs.version }}
        #
        #    - name: Build PHP 8.1
        #      uses: docker/build-push-action@v3
        #      with:
        #        builder: ${{ steps.buildx.outputs.name }}
        #        context: images/arm64/php81/
        #        file: images/arm64/php81/Dockerfile
        #        platforms: linux/arm64
        #        push: true
        #        tags: tokaido/php81:${{ steps.prep.outputs.version }}-arm64
        #        cache-from: type=local,src=/tmp/.buildx-cache
        #        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
        #        build-args: |
        #          TOK_VERSION=${{ steps.prep.outputs.version }}
        #
        #    - name: Build Nginx
        #      uses: docker/build-push-action@v3
        #      with:
        #        builder: ${{ steps.buildx.outputs.name }}
        #        context: images/arm64/nginx/
        #        file: images/arm64/nginx/Dockerfile
        #        platforms: linux/arm64
        #        push: true
        #        tags: tokaido/nginx:${{ steps.prep.outputs.version }}-arm64
        #        cache-from: type=local,src=/tmp/.buildx-cache
        #        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
        #        build-args: |
        #          TOK_VERSION=${{ steps.prep.outputs.version }}
        #
        #    - name: Build SSH 7.4
        #      uses: docker/build-push-action@v3
        #      with:
        #        builder: ${{ steps.buildx.outputs.name }}
        #        context: images/arm64/ssh/
        #        file: images/arm64/ssh/Dockerfile
        #        platforms: linux/arm64
        #        push: true
        #        tags: tokaido/ssh74:${{ steps.prep.outputs.version }}-arm64
        #        cache-from: type=local,src=/tmp/.buildx-cache
        #        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
        #        build-args: |
        #          TOK_VERSION=${{ steps.prep.outputs.version }}
        #          PHP_VERSION=74
        #
        #    - name: Build SSH 8.0
        #      uses: docker/build-push-action@v3
        #      with:
        #        builder: ${{ steps.buildx.outputs.name }}
        #        context: images/arm64/ssh/
        #        file: images/arm64/ssh/Dockerfile
        #        platforms: linux/arm64
        #        push: true
        #        tags: tokaido/ssh80:${{ steps.prep.outputs.version }}-arm64
        #        cache-from: type=local,src=/tmp/.buildx-cache
        #        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
        #        build-args: |
        #          TOK_VERSION=${{ steps.prep.outputs.version }}
        #          PHP_VERSION=80
        #
        #    - name: Build SSH 8.1
        #      uses: docker/build-push-action@v3
        #      with:
        #        builder: ${{ steps.buildx.outputs.name }}
        #        context: images/arm64/ssh/
        #        file: images/arm64/ssh/Dockerfile
        #        platforms: linux/arm64
        #        push: true
        #        tags: tokaido/ssh81:${{ steps.prep.outputs.version }}-arm64
        #        cache-from: type=local,src=/tmp/.buildx-cache
        #        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
        #        build-args: |
        #          TOK_VERSION=${{ steps.prep.outputs.version }}
        #          PHP_VERSION=81
        #
        #    - name: Move cache
        #      run: |
        #        rm -rf /tmp/.buildx-cache
        #        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
        
        #  combine:
        #    runs-on: [self-hosted, linux]
        #    needs: [build-arm64, build-amd64]
        #    steps:
        #    - name: Checkout
        #      uses: actions/checkout@v2
        #    - name: Login to DockerHub
        #      if: github.event_name != 'pull_request'
        #      uses: docker/login-action@v1
        #      with:
        #        username: ${{ secrets.DOCKER_USERNAME }}
        #        password: ${{ secrets.DOCKER_PASSWORD }}
        #    - name: Prepare
        #      id: prep
        #      run: |
        #        VERSION=experimental
        #        echo "GITHUB_REF=${GITHUB_REF}"
        #        echo "GITHUB_REF_TYPE=${GITHUB_REF_TYPE}"
        #
        #        # If this belongs to a release branch, create an experimental release for that minor version
        #        if [[ $GITHUB_REF_TYPE == "branch" && $GITHUB_REF == "refs/heads/release-*" ]]; then
        #          VERSION="${GITHUB_REF#*-}-experimental"
        #        fi
        #
        #        # If this is git tag, use the tag name as a docker tag
        #        if [[ $GITHUB_REF == refs/tags/* ]]; then
        #          VERSION=${GITHUB_REF#refs/tags/v}
        #        fi
        #
        #        # Set output parameters.
        #        echo ::set-output name=version::${VERSION}
        #    - name: combine-base
        #      run: | 
        #        docker manifest create tokaido/base\:${{ steps.prep.outputs.version }} \
        #          --amend tokaido/base\:${{ steps.prep.outputs.version }}-arm64 \
        #          --amend tokaido/base\:${{ steps.prep.outputs.version }}-amd64
        #          docker manifest annotate --arch arm64 tokaido/base:${{ steps.prep.outputs.version }} tokaido/base\:${{ steps.prep.outputs.version }}-arm64 
        #        docker manifest push tokaido/base:${{ steps.prep.outputs.version }}
        #    - name: combine-php74
        #      run: | 
        #        docker manifest create tokaido/php74\:${{ steps.prep.outputs.version }} \
        #          --amend tokaido/php74\:${{ steps.prep.outputs.version }}-arm64 \
        #          --amend tokaido/php74\:${{ steps.prep.outputs.version }}-amd64
        #          docker manifest annotate --arch arm64 tokaido/php74:${{ steps.prep.outputs.version }} tokaido/php74\:${{ steps.prep.outputs.version }}-arm64 
        #        docker manifest push tokaido/php74:${{ steps.prep.outputs.version }}
        #    - name: combine-php80
        #      run: | 
        #        docker manifest create tokaido/php80\:${{ steps.prep.outputs.version }} \
        #          --amend tokaido/php80\:${{ steps.prep.outputs.version }}-arm64 \
        #          --amend tokaido/php80\:${{ steps.prep.outputs.version }}-amd64
        #          docker manifest annotate --arch arm64 tokaido/php80:${{ steps.prep.outputs.version }} tokaido/php80\:${{ steps.prep.outputs.version }}-arm64 
        #        docker manifest push tokaido/php80:${{ steps.prep.outputs.version }}
        #    - name: combine-php81
        #      run: | 
        #        docker manifest create tokaido/php81\:${{ steps.prep.outputs.version }} \
        #          --amend tokaido/php81\:${{ steps.prep.outputs.version }}-arm64 \
        #          --amend tokaido/php81\:${{ steps.prep.outputs.version }}-amd64
        #          docker manifest annotate --arch arm64 tokaido/php81:${{ steps.prep.outputs.version }} tokaido/php81\:${{ steps.prep.outputs.version }}-arm64 
        #        docker manifest push tokaido/php81:${{ steps.prep.outputs.version }}
        #    - name: combine-nginx
        #      run: | 
        #        docker manifest create tokaido/nginx\:${{ steps.prep.outputs.version }} \
        #          --amend tokaido/nginx\:${{ steps.prep.outputs.version }}-arm64 \
        #          --amend tokaido/nginx\:${{ steps.prep.outputs.version }}-amd64
        #          docker manifest annotate --arch arm64 tokaido/nginx:${{ steps.prep.outputs.version }} tokaido/nginx\:${{ steps.prep.outputs.version }}-arm64 
        #        docker manifest push tokaido/nginx:${{ steps.prep.outputs.version }}
        #    - name: combine-ssh74
        #      run: | 
        #        docker manifest create tokaido/ssh74\:${{ steps.prep.outputs.version }} \
        #          --amend tokaido/ssh74\:${{ steps.prep.outputs.version }}-arm64 \
        #          --amend tokaido/ssh74\:${{ steps.prep.outputs.version }}-amd64
        #          docker manifest annotate --arch arm64 tokaido/ssh74:${{ steps.prep.outputs.version }} tokaido/ssh74\:${{ steps.prep.outputs.version }}-arm64 
        #        docker manifest push tokaido/ssh74:${{ steps.prep.outputs.version }}
        #    - name: combine-ssh81
        #      run: | 
        #        docker manifest create tokaido/ssh81\:${{ steps.prep.outputs.version }} \
        #          --amend tokaido/ssh81\:${{ steps.prep.outputs.version }}-arm64 \
        #          --amend tokaido/ssh81\:${{ steps.prep.outputs.version }}-amd64
        #          docker manifest annotate --arch arm64 tokaido/ssh81:${{ steps.prep.outputs.version }} tokaido/ssh81\:${{ steps.prep.outputs.version }}-arm64 
        #        docker manifest push tokaido/ssh81:${{ steps.prep.outputs.version }}
        #    - name: combine-ssh80
        #      run: | 
        #        docker manifest create tokaido/ssh80\:${{ steps.prep.outputs.version }} \
        #          --amend tokaido/ssh80\:${{ steps.prep.outputs.version }}-arm64 \
        #          --amend tokaido/ssh80\:${{ steps.prep.outputs.version }}-amd64
        #          docker manifest annotate --arch arm64 tokaido/ssh80:${{ steps.prep.outputs.version }} tokaido/ssh80\:${{ steps.prep.outputs.version }}-arm64 
        #        docker manifest push tokaido/ssh80:${{ steps.prep.outputs.version }}

server {
    listen              8082;
    listen              8443 ssl default_server;

    ssl_certificate     /app/config/nginx/runtime/tls/default.crt;
    ssl_certificate_key /app/config/nginx/runtime/tls/default.key;
    ssl_protocols 		TLSv1.3;
    ssl_ciphers 		ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
    server_name         {{.ALLOWED_HOSTS}};
    server_tokens       off;

    set_real_ip_from  10.0.0.0/8;
    set_real_ip_from  172.16.0.0/12;
    set_real_ip_from  192.168.0.0/16;
    real_ip_recursive on;
    real_ip_header    X-Forwarded-For;

    port_in_redirect off;

    root  /app/site/{{.DRUPAL_ROOT}};

    location / {
        # Replicate the Apache <FilesMatch> directive of Drupal standard .htaccess.
        # Disable access to any code files. Return a 404 to curtail information disclosure.
        # (thanks Amazee - https://github.com/amazeeio/lagoon/blob/0bc487fb71b69c1b10e20517dd239621da4563c2/images/nginx-drupal/drupal.conf)
        # https://github.com/drupal/drupal/blob/8.8.x/.htaccess
        location ~* \.(engine|inc|install|make|module|profile|po|sh|.*sql|sql.gz|theme|twig|tpl(\.php)?|xtmpl|yml)(~|\.sw[op]|\.bak|\.orig|\.save)?$|^\/(\.(?!well-known).*|Entries.*|Repository|Root|Tag|Template|composer\.(json|lock)|web\.config)$|^\/#.*#$|\.php(~|\.sw[op]|\.bak|\.orig|\.save)$ {
            deny all;
            access_log off;
            log_not_found off;
        }


        # Block access to scripts in Files directories
        location ~ ^/sites/[^/]+/files/.*\.(php|sh|bash|py)$ {
            deny all;
        }

        # Block access to certain file types if not found in Files
        location ~* ^(?!.+sites\/.+\/files\/).+\.(txt|md)$ {
            deny all;
        }

        # Disallow access to any dot files, but send the request to Drupal
        location ~* /\. {
            try_files /dev/null @drupal;
        }

        # Allow direct php access to statistics.php
        location = /core/modules/statistics/statistics.php {
            try_files /dev/null @php;
        }

        # Direct Access to other .php files is not allowed and is sent to Drupal instead
        location ~* ^.+\.php$ {
            try_files /dev/null @drupal;
        }

        # Include the static cache component, which is automatically generated by
        # reading the settings in .ironstar/config.yml
        # include /app/config/nginx/runtime/cache.conf;

        # Try to find a file on disk, if not pass to Drupal
        try_files $uri @drupal;
    }

# Except where explicitly send to @php, all requests that can't be served from static files go to Drupal via this block
    location @drupal {
        include /app/config/nginx/fastcgi.conf;

        fastcgi_param     SCRIPT_NAME       /index.php;
        fastcgi_param     SCRIPT_FILENAME   $document_root/index.php;
        fastcgi_param     REMOTE_ADDR       $http_x_real_ip;
        fastcgi_index                       index.php;

        fastcgi_read_timeout      			{{.FASTCGI_READ_TIMEOUT}};
        fastcgi_keep_conn         			on;
        fastcgi_intercept_errors  			on;
        fastcgi_pass              			fpm:9000;
        fastcgi_buffers           			16 16k;
        fastcgi_buffer_size       			32k;

        fastcgi_split_path_info   			 ^(.+\.php)(/.+)$;
    }

    # PHP is called directly only where explicitly required by Drupal
    location @php {
        include /app/config/nginx/fastcgi.conf;

        fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
        # Ensure the php file exists. Mitigates CVE-2019-11043
        try_files $fastcgi_script_name =404;

        fastcgi_param 	SCRIPT_FILENAME 	$document_root$fastcgi_script_name;
        fastcgi_param 	PATH_INFO 			$fastcgi_path_info;
        fastcgi_param   REMOTE_ADDR         $http_x_real_ip;

        fastcgi_read_timeout      			{{.FASTCGI_READ_TIMEOUT}};
        fastcgi_keep_conn         			on;
        fastcgi_intercept_errors  			on;
        fastcgi_pass              			fpm:9000;
        fastcgi_buffers           			16 16k;
        fastcgi_buffer_size       			32k;
    }

}
